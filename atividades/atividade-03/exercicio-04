// 1. Atividade com `if`:
// - Descri√ß√£o: Escreva um programa que leia um n√∫mero inteiro e verifique se ele √© positivo, negativo ou zero. Use a declara√ß√£o `if`.
// - Dica: Use a fun√ß√£o `scanf` para ler o n√∫mero e compare-o com zero.
#include<stdio.h> 

int verifica_numero() {
    int num;
    printf("digite um numero: ");
    scanf("%d",num);
    if(num>0){
        printf("O numero %d √© positivo",num);
    }
    if(num<0){
        printf("O numero %d √© negativo",num);
    }
    if(num==0){
        printf("O numero %d √© zero",num);
    }

    return 3;
}

// 2. Atividade com `if else`:
// - Descri√ß√£o: Crie um programa que determine se um ano √© bissexto ou n√£o. 
//  Um ano √© bissexto se for divis√≠vel por 4, exceto quando √© divis√≠vel por 100 (a menos que tamb√©m seja divis√≠vel por 400).
// - Dica: Use a declara√ß√£o `if else` para verificar as condi√ß√µes.

int verifica_bissexto() {
    int ano;

    // Solicita ao usu√°rio que insira um ano
    printf("Digite um ano: ");
    scanf("%d", &ano);

    // Verifica se o ano √© bissexto usando if else
    if (ano % 400 == 0) {
        printf("%d √© um ano bissexto.\n", ano);
    } else if (ano % 100 == 0) {
        printf("%d n√£o √© um ano bissexto.\n", ano);
    } else if (ano % 4 == 0) {
        printf("%d √© um ano bissexto.\n", ano);
    } else {
        printf("%d n√£o √© um ano bissexto.\n", ano);
    }

    return 0;
}


// 3. Atividade com `switch`:
// - Descri√ß√£o: Implemente um programa que leia um n√∫mero de 1 a 7 e exiba o dia da semana correspondente (1 = domingo, 2 = segunda-feira, etc.).
// - Dica: Use a estrutura `switch` para associar os n√∫meros aos dias da semana.


int exibir_dia_da_semana() {
    int dia;

    // Solicita ao usu√°rio que insira um n√∫mero entre 1 e 7
    printf("Digite um n√∫mero de 1 a 7: ");
    scanf("%d", &dia);

    // Verifica o n√∫mero e exibe o dia da semana correspondente usando switch
    switch (dia) {
        case 1:
            printf("Domingo\n");
            break;
        case 2:
            printf("Segunda-feira\n");
            break;
        case 3:
            printf("Ter√ßa-feira\n");
            break;
        case 4:
            printf("Quarta-feira\n");
            break;
        case 5:
            printf("Quinta-feira\n");
            break;
        case 6:
            printf("Sexta-feira\n");
            break;
        case 7:
            printf("S√°bado\n");
            break;
        default:
            printf("N√∫mero inv√°lido! Digite um n√∫mero entre 1 e 7.\n");
            break;
    }

    return 0;
}

// 4. Atividade com Operador Tern√°rio:
// - Descri√ß√£o: Escreva um programa que leia dois n√∫meros inteiros e exiba o maior deles usando o operador tern√°rio.
// - Dica: Use a express√£o `(a > b) ? a : b` para encontrar o maior n√∫mero.

int exibe_maior() {
    int a, b, maior;

    // Solicita ao usu√°rio que insira dois n√∫meros inteiros
    printf("Digite o primeiro n√∫mero: ");
    scanf("%d", &a);
    printf("Digite o segundo n√∫mero: ");
    scanf("%d", &b);

    // Usa o operador tern√°rio para determinar o maior n√∫mero
    maior = (a > b) ? a : b;

    // Exibe o maior n√∫mero
    printf("O maior n√∫mero √©: %d\n", maior);

    return 0;
}

// Lembre-se de testar seus programas com diferentes entradas para garantir que funcionem corretamente! üåü

int main() {
    verifica_numero();
    verifica_bissexto();
    exibir_dia_da_semana();
    exibe_maior();
}
